library(shiny)
library(glue)
library(bslib)

source("dependencies.R")

ui <- fixedPage(
  tags$head(tags$link(rel = "stylesheet", type = "text/css", href = "Koffi.css")),#"quartz.css" / "morph.css" / "sketchy.css" /"darkly.css"
  theme = bslib::bs_theme(
    version = 5#,  # use Bootstrap version 5
    #bootswatch = "sketchy"
  ),
  column(12, 
         numericInput("guess_number", 
                      label=h1("Guess a number between 1 and 10"#,
                               #  style = "font-family: Lobster, cursive;
                               # font-weight: 500; line-height: 1.1;
                               # color: #4d3a7d;"
                               ),
                      value=0,
                      width='50%'),
         actionButton("BtnPlay","PLAY", width="25%", icon("play"), class="nice_btn"),#, style='padding: 0%; font-size:300%; background-color:transparent; color:#228B22; webkit-tap-highlight-color: transparent;'),
         linebreaks(2),
         actionButton("useless","NOTHING", icon("play")),#, style='padding: 0%; font-size:300%; background-color:transparent; color:#228B22; webkit-tap-highlight-color: transparent;'),
         linebreaks(2),
         uiOutput("result"),
         align="center"
)
)

server <- function(input, output, session) {
    
    observeEvent(input$BtnPlay,{
      gen_number <- sample(1:10,1)
      result <- ifelse(rep(gen_number==input$guess_number,2), c("Win!!!","green"), c("Loose!!!","red"))
      output$result <- renderUI(
        bs_card(
          header_text = "Here comes your outcome", 
          title_text = glue("The generated number is: {gen_number}"), 
          body_text = h1(result[1], style=glue('color:{result[2]}'))
        )
      )
    })

}

shinyApp(ui, server)

