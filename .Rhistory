library(shiny)
ui <- fixedPage(
column(12,
numericInput("guess_number",
label=h3("Guess a number between 1 and 10"),
value=0),
actionButton("BtnPlay","PLAY"),
uiOutput("result"),
uiOutput("generated_num"),
align="center"
)
)
runApp()
source("bs_card.R")
source("/bs_card.R")
source("./bs_card.R")
source("~/bs_card.R")
source("dependencies.R")
source("dependencies.R")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
# Base image https://hub.docker.com/u/rocker/
FROM rocker/shiny:latest
library(renv)
install.packages("renv")
renv::init()
library(shiny)
library(glue)
library(bslib)
#library(shinyjs)
source("dependencies.R")
ui <- fixedPage(
tags$head(tags$link(rel = "stylesheet", type = "text/css", href = "sketchy.css")),#"quartz.css" / "morph.css" / "sketchy.css" /"darkly.css"
theme = bslib::bs_theme(
version = 5  # use Bootstrap version 5
),
tabsetPanel(
tabPanel("Guess 1",
singleGuessUI("guess1")
),
tabPanel("Guess 10",
singleGuessUI("guess10")
),
tabPanel("Guess n",
fluidRow(
column(3),
column(6,
sliderInput("n_guess", "Select number of guess",
min=1, max=100, value=5, step=1),
align="center")
),
singleGuessUI("guessn")
)
)
)
server <- function(input, output, session) {
singleGuessServer("guess1", n=1)
singleGuessServer("guess10", n=10)
observeEvent(input$n_guess, {
singleGuessServer("guessn", n=input$n_guess)
})
}
shinyApp(ui, server)
docker build -t
docker build -t ufc-app .
$ docker build -t ufc-app .
$docker build -t ufc-app .
?docker
??docker
renv::init()
library(shiny)
library(glue)
library(bslib)
#library(shinyjs)
source("dependencies.R")
ui <- fixedPage(
tags$head(tags$link(rel = "stylesheet", type = "text/css", href = "sketchy.css")),#"quartz.css" / "morph.css" / "sketchy.css" /"darkly.css"
theme = bslib::bs_theme(
version = 5  # use Bootstrap version 5
),
tabsetPanel(
tabPanel("Guess 1",
singleGuessUI("guess1")
),
tabPanel("Guess 10",
singleGuessUI("guess10")
),
tabPanel("Guess n",
fluidRow(
column(3),
column(6,
sliderInput("n_guess", "Select number of guess",
min=1, max=100, value=5, step=1),
align="center")
),
singleGuessUI("guessn")
)
)
)
server <- function(input, output, session) {
singleGuessServer("guess1", n=1)
singleGuessServer("guess10", n=10)
observeEvent(input$n_guess, {
singleGuessServer("guessn", n=input$n_guess)
})
}
shinyApp(ui, server)
shiny::runApp()
docker-build
?docker-build
?docker -build
?docker
??docker
library(renv)
renv::init()
?docker
docker build
setwd("C:/BRAVE/personal/Projets/github/Guessing_game")
setwd("C:/BRAVE/personal/Projets/github/Guessing_game")
getwd()
library(shiny)
runApp()
runApp()
?isolate
?isolate
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
install.packages("packrat")
install.packages("rsconnect")
shiny::runApp()
shiny::runApp()
